using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LesApp4
{
    class Program
    {
        static void Main()
        {
            // Підключення української мови
            Console.OutputEncoding = Encoding.Unicode;

            // Введення сторін трикутника
            Console.WriteLine("Введіть сторони прямокутника:\n");
            Console.Write("\ta = ");
            double a = double.Parse(Console.ReadLine().Replace(".", ","));
            Console.Write("\tb = ");
            double b = double.Parse(Console.ReadLine().Replace(".", ","));
            Console.Write("\tc = ");
            double c = double.Parse(Console.ReadLine().Replace(".", ","));

            // перевірка правильності вводу
            if ((a <= 0) || (b <= 0) || (c <= 0))
            {
                Console.WriteLine("\nСторони фігури не можуть бути менші або рівні нулю!");
                goto exit;  // тестова перевірка міток
            }

            // Знаходження максимальної сторони
            double maxSide = Math.Max(a, Math.Max(b, c));

            // Перевірка того чи вказані сторони є сторонами трикутника,
            // до уваги не беруться сферичні трикутники, з розділу сферична геометрія
            // тобто трикутник який побудований на сфері https://uk.wikipedia.org/wiki/Сферична_тригонометрія

            // якщо максимальна сторона трикутника є меншою 
            // від суми двох інших то ця фігура є трикутником
            double analiz = (a + b + c) / maxSide - 1;
            // Примітка. Цей вираз скорочує перевірку сторін між собою
            // 1. Ми не знаємо яка із сторін має максимальний розмір
            // 2. Якась із 3-х сторін є максимальню, тому взявши нормований
            // периметр і віднявши 1 ми знайдемо нормоване значення суми двох інших
            // 3. Якщо нормована сума двох інших більша за 1, тобто нормованого значення
            // довжини максимальної сторони то ця фігура - трикутник

            // перевірка чи є фігура трикутником і виведення сповіщенні
            if (analiz <= 1)
            {
                Console.WriteLine("\nДана  фігура не є трикутником!");
                goto exit;  // тестова перевірка міток
            }
            // Примітка. З філософської точки зору, якщо максимальна сторона
            // трикутника рівна сумі двох інших, то трикутник вироджується в
            // пряму лінію, або ж іншими словами трикутник з нульовою площею
            // але для реальних розрахунків треба підтримувати більш строге визначення

            // Перевірка чи трикутник є рівностороннім,
            // перевірка чи всі сторони рівні
            if (analiz + 1 == 3)
            {
                Console.WriteLine("\nДаний трикутник - рівносторонній!");
            }
            // Виходячи із вище описаних пояснень, якщо до суми двох
            // менших сторін повернути нормоване значення максимальної
            // то отримаємо периметр, якщо він рівний 3 то трикутник рівносторонній

            // Якщо дві будь які строни трикутника рівні то він є рівнобедреним.
            if ((a == b) || (a == c))
            {
                Console.WriteLine("\nДаний трикутник - рівнобедрений!");
            }

            // Для прямокутного трикутника виконується теорема Піфагора
            // а максимальна сторона є гіпотенузою, с^2 = a^2 + b^2
            // отже, ми знаэмо максимальну сторону maxSide = с - гіпотенуза,
            // але не знаємо яка це із сторін, тому розв'язуємо рівняння:
            // 2 * с^2 == a^2 + b^2 + с^2 - сума квадратів всіх сторін справа, а зліва 2 квадрати гіпотенузи
            // (a^2 + b^2 + с^2) / с^2 == 2 і зробимо заміну
            // (a^2 + b^2 + с^2) / maxSide^2 == 2 - умова перевірки прямокутності трикутника

            analiz = (a * a + b * b + c * c) / (maxSide * maxSide);
            // Перевірка рівності
            if (analiz == 2)
            {
                Console.WriteLine("\nДаний трикутник - прямокутний!");
            }

            // Інформація про трикутник
            // знаходимо півпериметр
            analiz = (a + b + c) / 2;
            Console.WriteLine($"\nПериметр трикутника P = {2 * analiz:N};");
            // Площа трикутника знаходиться за формулою Герона
            analiz = Math.Sqrt(analiz * (analiz - a) * (analiz - b) * (analiz - c));
            Console.WriteLine($"\nПлоща трикутника S = {analiz:N};");

            // Рахуємо радіуси вписаного і описаного кола
            // Радіус вписаного кола r = S / p, де p - півпериметр
            Console.WriteLine($"\nРадіус вписаного кола r = " +
                $"{2 * analiz / (a + b + c):N};");
            // Радіус описаного кола R = abc / 4S, де S - площа
            Console.WriteLine($"\nРадіус описаного кола R = " +
                $"{a * b * c / (4 * analiz):N};");

            // перший кут можна знайти за теоремою косинусів,
            // два інші кути за теоремою синусів

        exit: // мітка для виходу якщо помилки при введені

            // Повторення
            Console.WriteLine("\nСпробувати ще раз: [т, н]");
            Console.Write("\t");
            var button = Console.ReadKey();

            if ((button.KeyChar.ToString().ToLower() == "т") ||
                (button.KeyChar.ToString().ToLower() == "n")) // можливо забули переключити розкладку клавіатури
            {
                Console.Clear();
                Main();
            }
        }
    }
}
